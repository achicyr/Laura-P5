{"mappings":"AACA,IAAIA,IAAMC,SAASC,SACfC,IAAM,IAAIC,IAAIJ,KACdK,cAAgB,IAAIC,gBAAgBH,IAAII,QAC5C,GAAIF,cAAcG,IAAI,MAClB,IAAIC,GAAKJ,cAAcK,IAAI,MAE/B,IAAIC,WAcJ,SAASC,SAASC,GAGd,IAAIC,EAAMb,SAASc,cAAc,cACjCC,QAAQC,IAAIH,GAGZ,IAAII,EAAMjB,SAASkB,cAAc,OAGjCD,EAAIE,IAAMP,EAAKQ,SACfH,EAAII,IAAMT,EAAKU,OAGfT,EAAIU,YAAYN,GAGhB,IAAIO,EAAQxB,SAASc,cAAc,UAC/BW,EAAQzB,SAASc,cAAc,UAC/BY,EAAc1B,SAASc,cAAc,gBAGzCU,EAAMG,UAAYf,EAAKgB,KACvBH,EAAME,UAAYf,EAAKa,MACvBC,EAAYC,UAAYf,EAAKc,YAG7B,IAAK,IAAIG,KAAUjB,EAAKiB,OAAQ,CAC5Bd,QAAQC,IAAIa,GAGZ,IAAIC,EAAgB9B,SAASkB,cAAc,UAG3ClB,SAASc,cAAc,WAAWS,YAAYO,GAG9CA,EAAcC,MAAQF,EACtBC,EAAcE,UAAYH,CAC9B,CACAd,QAAQC,IAAI,aAChB,CAEA,SAASiB,YACLlB,QAAQC,IAAI,YAAcN,YAG1B,IAAIwB,EAAclC,SAASc,cAAc,aACrCqB,EAAenC,SAASc,cAAc,WAGtCsB,EAAS,CACT5B,GAAIE,WAAW2B,IACfC,MAAOH,EAAaJ,MACpBQ,SAAUL,EAAYH,OAG1BhB,QAAQC,IAAIoB,GAGZ,IAAII,EAAa9B,WAAWkB,KAAOO,EAAaJ,MAM5CU,EAAqBL,EAAOG,SAItB,MAFDG,aAAaC,QAAQ,SAG1BD,aAAaE,QAAQ,OAAQ,MAEjC,IAAIC,EAAgBC,KAAKC,MAAML,aAAaC,QAAQ,SACpD5B,QAAQC,IAAI6B,GACZ,IAAIG,EAAwBH,EAAcL,IAAYD,SAKtD,GAA0B,IAAtBJ,EAAaJ,MACbkB,OAASC,OAAOC,MAAM,2BAErB,GAAyB,GAArBjB,EAAYH,MACjBkB,OAASC,OAAOC,MAAM,yBACnB,CAEH,GADApC,QAAQC,IAAI6B,GACRA,EAAcL,GAAY,CAC1BzB,QAAQC,IAAI,eAEZ,IAAIoC,EAAQC,SAASL,GAAyBK,SAASZ,GACvD1B,QAAQC,IAAI,iBAAmBoC,GAE/BP,EAAcL,GAAWD,SAAWa,EACpCP,EAAgBC,KAAKQ,UAAUT,GAC/BH,aAAaE,QAAQ,OAAQC,EAEjC,MACI9B,QAAQC,IAAI,uBACZ6B,EAAcL,GAAaJ,EAC3BS,EAAgBC,KAAKQ,UAAUT,GAC/BH,aAAaE,QAAQ,OAAQC,GAWxBU,QAAQ,yGACZtD,SAASuD,KAAO,YACzB,CACJ,CAhIAzC,QAAQC,IAAIR,IAIZiD,MAAM,sCAAwCjD,IACzCkD,MAAMC,GAAaA,EAAS/C,SAC5B8C,MAAM9C,IACHG,QAAQC,IAAIJ,GACZD,SAASC,GACTF,WAAaE,CAAA,IAyHrB,IAAIgD,OAAS5D,SAASc,cAAc,cAGpCoC,OAAOW,OAAS,WACZD,OAAOE,iBAAiB,QAAS7B,UACrC","sources":["front/js/product.js"],"sourcesContent":["//récupérer les parametres de l'url avec URLSearchParams\nvar str = document.location;\nvar url = new URL(str);\nvar search_params = new URLSearchParams(url.search);\nif (search_params.has('id')) {\n    var id = search_params.get('id');\n}\nlet oneProduct\nconsole.log(id)\n\n// On récupère la liste d'un produit\n\nfetch('http://localhost:3000/api/products/' + id)  // on va chercher l'url que l'on souhaite\n    .then((response) => response.json())  // on souhaite une reponse en json\n    .then((json) => {\n        console.log(json); // on voit ce qu'il en retourne\n        produits(json)\n        oneProduct = json\n    })\n\n// on défini la fonction pour qu'elle affiche les produits de l'api sur la page product.html\nfunction produits(json) {\n\n    // on récupère la class \".items__img\" dans le div\n    let div = document.querySelector(\".item__img\");\n    console.log(div)\n\n    // on créer un nouveau élément img\n    let img = document.createElement('img');\n\n    // on ajoute un nouvel attribut pour l'image\n    img.src = json.imageUrl;\n    img.alt = json.altTxt;\n\n    // Ajout d'un élément au noeud\n    div.appendChild(img);\n\n    // on récupère les identifiants de la div __titlePrice et __description\n    let title = document.querySelector('#title')\n    let price = document.querySelector('#price')\n    let description = document.querySelector('#description')\n\n    // on ajoute les attributs\n    title.innerText = json.name;\n    price.innerText = json.price;\n    description.innerText = json.description;\n\n    // on fait une boucle for of \n    for (let colors of json.colors) {\n        console.log(colors);\n\n        // on créer l'élément option\n        let productColors = document.createElement(\"option\");\n\n        // on récupère l'id colors et on l'ajoute au noeud\n        document.querySelector(\"#colors\").appendChild(productColors);\n\n        // on ajoute les attributs\n        productColors.value = colors;\n        productColors.innerHTML = colors;\n    }\n    console.log(\"couleur ok\");\n}\n\nfunction addToCart() {\n    console.log(\"click ok \" + oneProduct)\n\n    //// on récupère les identifiants de la quantité et de la couleur\n    let quantityDiv = document.querySelector(\"#quantity\");\n    let colorsSelect = document.querySelector(\"#colors\");\n\n    //// on crée le produit avec ses caractéristiques; nom,id,couleur,image,quantité,prix et le texte alternatif\n    let choice = {\n        id: oneProduct._id,\n        color: colorsSelect.value,\n        quantity: quantityDiv.value,\n        \n    }\n    console.log(choice)\n\n    // on déclare le productId qui prend la valeur du nom + de la couleur\n    let productId =  oneProduct.name + colorsSelect.value;\n\n    // on déclare productList en array vide\n    let productsList = [];\n\n    // on déclare le nouveau produit avec ses caractéristiques stockés dans choice\n    let newProductQuantity = choice.quantity;\n\n    let ls = localStorage.getItem('cart')\n\n    if (ls == null)\n        localStorage.setItem(\"cart\", \"{}\")\n\n    let renderProduct = JSON.parse(localStorage.getItem(\"cart\")); // convertir du texte en objet Javascript avec JSON.parse\n    console.log(renderProduct)\n    let renderProductQuantity = renderProduct[productId]?.quantity // renderProductQuantity prend la valeur de renderProduct[productId].quantity\n\n    // couleur et quantité\n\n    // si la couleur est = \"\" alors il faut retourner une alerte (\"Choisir la couleur\")\n    if (colorsSelect.value == \"\") {\n        result = window.alert(\"Choisir la couleur\")\n    }\n    else if (quantityDiv.value == 0) { // si la quantité est = 0 alors il faut retourner une alerte (\"Quantité invalide\")\n        result = window.alert(\"Quantité invalide\")\n    } else {\n        console.log(renderProduct)\n        if (renderProduct[productId]) {\n            console.log(\"existe deja\")\n\n            let total = parseInt(renderProductQuantity) + parseInt(newProductQuantity);\n            console.log('total produit:' + total);\n            \n            renderProduct[productId].quantity = total\n            renderProduct = JSON.stringify(renderProduct)\n            localStorage.setItem('cart', renderProduct)\n            \n        } else {\n            console.log('n existe pas encore')\n            renderProduct[productId] = choice\n            renderProduct = JSON.stringify(renderProduct)\n            localStorage.setItem('cart', renderProduct)\n\n            /*choice = {\n                id: oneProduct._id,\n                color: colorsSelect.value,\n                quantity: renderProductQuantity,\n            };\n            productsList.push(choice);// ajout de l'élément dans l'array\n            choiceString = JSON.stringify(productsList);// il faut convertir la valeur\n            localStorage.setItem(productId, choiceString);// ajout du duo clé-valeur dans le localStorage*/\n        }\n        const a= confirm(\"Votre panier a bien été rajouté du produit .... avec la quntitié ...\\nVoulez-vous aller au panier ?\")\n        if(a)location.href = 'cart.html'\n    }\n}\n\nlet button = document.querySelector(\"#addToCart\");\n\n// enregistrer les donnees de selection de produit en local \nwindow.onload = function () {\n    button.addEventListener(\"click\", addToCart);\n}\n"],"names":["str","document","location","url","URL","search_params","URLSearchParams","search","has","id","get","oneProduct","produits","json","div","querySelector","console","log","img","createElement","src","imageUrl","alt","altTxt","appendChild","title","price","description","innerText","name","colors","productColors","value","innerHTML","addToCart","quantityDiv","colorsSelect","choice","_id","color","quantity","productId","newProductQuantity","localStorage","getItem","setItem","renderProduct","JSON","parse","renderProductQuantity","result","window","alert","total","parseInt","stringify","confirm","href","fetch","then","response","button","onload","addEventListener"],"version":3,"file":"product.929b0993.js.map"}